{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAY5C,OACI,mCAAE,sBAAMC,SARO,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAIZ,SAEC,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbrB,SAACP,GAC7BF,EAAcE,EAAEQ,OAAOF,e,+BCLVG,EAAQ,uCAAC,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEZG,EAFY,gBAGEA,EAAKC,OAHP,uBAGXC,EAHW,EAGXA,KACDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARxB,kBAWXM,GAXW,4CAAD,sDCERO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IAC3B,4BAAIA,QCHKO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACdd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAH4B,mBACjCC,EADiC,KAC1BC,EAD0B,KAqBxC,OAdEC,qBAAU,WACRxB,EAASC,GAAUwB,MAAK,SAAAC,GAElBH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAMjB,CAACpB,IAGCqB,EDlBsBK,CAAa1B,GAA/Ba,EAF0B,EAE/BN,KAAYa,EAFmB,EAEnBA,QAEhB,OACI,qCACA,oBAAKJ,UAAU,yCAAf,SAAyDhB,IACxDoB,GAAW,mBAAIJ,UAAU,wCAAd,wBACZ,qBAAKA,UAAU,YAAf,SAEKH,EAAOJ,KAAI,SAAAkB,GAAK,OACpB,cAAC,EAAD,eAAgCA,GAAdA,EAAMhB,aEXpBiB,EAAe,WAAO,IAAD,EAGI1C,mBAAS,CAAC,cAHd,mBAGvB2C,EAHuB,KAGZ5C,EAHY,KAS9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAER,6BAAK4C,EAAWpB,KAAI,SAAAT,GAAQ,OAAE,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCbhD8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.8157c1c3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleinputchange=(e)=>{\r\nsetInputValue(e.target.value);\r\n    }\r\n    const handlesumbit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n        setCategories(cats => [inputValue,...cats]);\r\n        setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <><form onSubmit={handlesumbit}>\r\n       \r\n           <input type=\"text\" value={inputValue} onChange={handleinputchange}\r\n           /> \r\n           </form>\r\n        </>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifts=async (category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=cGqKwIRWMzWZNIF12XAUR8cCPwC7Y8C4`;\r\n    const resp=await fetch(url);\r\n    const {data} =await resp.json();\r\n    const gifs=data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src={url} alt={title}/>\r\n    <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState,useEffect } from 'react'\r\nimport { getGifts } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nexport const GifGrid = ({category}) => {\r\n   \r\n const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3  className=\"card animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading && <p  className=\"card animate__animated animate__flash\" >cargando..</p>}\r\n        <div className=\"card-grid\">\r\n            \r\n            {images.map(image=>\r\n         <GifGridItem key={image.id} {...image}/>\r\n    )}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react';\r\nimport { getGifts } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n      data:[],\r\n      loading:true\r\n  });\r\n\r\n  \r\n    useEffect(() => {\r\n      getGifts(category).then(imgs=>{\r\n      \r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n              });\r\n            \r\n       \r\n          \r\n      });\r\n    }, [category])\r\n\r\n\r\n  return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   \r\n    const [categories,setCategories]= useState(['one punch']);\r\n//     const handleAdd = (serie) =>{\r\n//         let copia=[...categories];\r\n//         copia.push(serie);\r\n// setCategories(copia);\r\n//     }\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            {/* <button onClick={()=>handleAdd('megaman')}>Agregar</button> */}\r\n    <ol>{categories.map(category=><GifGrid key={category} category={category}/>\r\n        \r\n    )}</ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n \n  document.getElementById('root')\n);\n"],"sourceRoot":""}